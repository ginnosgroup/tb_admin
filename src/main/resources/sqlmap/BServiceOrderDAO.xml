<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zhinanzhen.b.dao.ServiceOrderDAO">

    <insert id="addServiceOrder" parameterType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO" useGeneratedKeys="true" keyProperty="id">
        INSERT
            INTO b_service_order (
                gmt_create,
                gmt_modify,
                code,
                finish_date,
                type,
                people_number,
                people_type,
                people_remarks,
                service_id,
                parent_id,
                applicant_parent_id,
                service_package_id,
                school_id,
                course_id,
                school_institution_location_id,
                institution_trading_name,
                state,
                state_mark,
                urgent_state,
                mara_approval_date,
                official_approval_date,
                is_settle,
                is_deposit_user,
                is_submitted,
                subagency_id,
                is_pay,
                receive_type_id,
                receive_date,
                receivable,
                discount,
                received,
                installment,
                payment_voucher_image_url_1,
                payment_voucher_image_url_2,
                payment_voucher_image_url_3,
                payment_voucher_image_url_4,
                payment_voucher_image_url_5,
                coe_payment_voucher_image_url_1,
                coe_payment_voucher_image_url_2,
                coe_payment_voucher_image_url_3,
                coe_payment_voucher_image_url_4,
                coe_payment_voucher_image_url_5,
                visa_voucher_image_url,
                low_price_image_url,
                per_amount,
                amount,
                expect_amount,
                gst,
                deduct_gst,
                bonus,
                user_id,
                applicant_id,
                mara_id,
                adviser_id,
                adviser_id_2,
                official_id,
                remarks,
                refuse_reason,
                closed_reason,
                is_delete,
                information,
                is_history,
                nut_cloud,
                service_assess_id,
                real_people_number,
                verify_code,
                ref_no)
            VALUES (
                now(),
                now(),
                #{code},
                NULL,
                #{type},
                #{peopleNumber},
                #{peopleType},
                #{peopleRemarks},
                #{serviceId},
                #{parentId},
                #{applicantParentId},
                #{servicePackageId},
                #{schoolId},
                #{courseId},
                #{schoolInstitutionLocationId},
                #{institutionTradingName},
                #{state},
                #{stateMark},
                #{urgentState},
                NULL,
                NULL,
                #{isSettle},
                #{isDepositUser},
                #{isSubmitted},
                #{subagencyId},
                #{isPay},
                #{receiveTypeId},
                #{receiveDate},
                #{receivable},
                #{discount},
                #{received},
                #{installment},
                #{paymentVoucherImageUrl1},
                #{paymentVoucherImageUrl2},
                #{paymentVoucherImageUrl3},
                #{paymentVoucherImageUrl4},
                #{paymentVoucherImageUrl5},
                #{coePaymentVoucherImageUrl1},
                #{coePaymentVoucherImageUrl2},
                #{coePaymentVoucherImageUrl3},
                #{coePaymentVoucherImageUrl4},
                #{coePaymentVoucherImageUrl5},
                #{visaVoucherImageUrl},
                #{lowPriceImageUrl},
                #{perAmount},
                #{amount},
                #{expectAmount},
                #{gst},
                #{deductGst},
                #{bonus},
                #{userId},
                #{applicantId},
                #{maraId},
                #{adviserId},
                #{adviserId2},
                #{officialId},
                #{remarks},
                #{refuseReason},
                #{closedReason},
                0,
                #{information},
                #{isHistory},
                #{nutCloud},
                #{serviceAssessId},
                #{realPeopleNumber},
                #{verifyCode},
                #{refNo});
    </insert>
    
    <update id="updateServiceOrder" parameterType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        UPDATE b_service_order 
        SET gmt_modify = now()
        <if test='type != null and type != ""'>
            , type = #{type}
        </if>
        <if test='peopleNumber != null and peopleNumber != ""'>
            , people_number = #{peopleNumber}
        </if>
        <if test='peopleType != null and peopleType != ""'>
            , people_type = #{peopleType}
        </if>
        <if test='peopleRemarks != null and peopleRemarks != ""'>
            , people_remarks = #{peopleRemarks}
        </if>
        <if test='serviceId != null and serviceId > 0'>
            , service_id = #{serviceId}
        </if>
        <if test='parentId != null and parentId > 0'>
            , parent_id = #{parentId}
        </if>
        <if test='applicantParentId != null and applicantParentId > 0'>
            , applicant_parent_id = #{applicantParentId}
        </if>
        <if test='servicePackageId != null and servicePackageId > 0'>
            , service_package_id = #{servicePackageId}
        </if>
        <if test='schoolId != null and schoolId > 0'>
            , school_id = #{schoolId}
        </if>
        <if test="courseId != null and courseId > 0">
            , course_id = #{courseId}
        </if>
        <if test="schoolInstitutionLocationId != null and schoolInstitutionLocationId > 0">
            , school_institution_location_id = #{schoolInstitutionLocationId}
        </if>
        <if test='institutionTradingName != null and institutionTradingName != ""'>
            , institution_trading_name = #{institutionTradingName}
        </if>
        <if test='state != null and state != ""'>
            , state = #{state}
        </if>
        <if test='stateMark != null'>
            , state_mark = #{stateMark}
        </if>
        <if test='urgentState != null and urgentState != ""'>
            , urgent_state = #{urgentState}
        </if>
        <if test='urgentState == ""'>
            , urgent_state = NULL
        </if>
        <if test='maraApprovalDate != null'>
            , mara_approval_date = #{maraApprovalDate}
        </if>
        <if test='submitMaraApprovalDate != null'>
            , submit_mara_approval_date = #{submitMaraApprovalDate}
        </if>
        <if test='officialApprovalDate != null'>
            , official_approval_date = #{officialApprovalDate}
        </if>
        <if test='isSettle != null'>
            , is_settle = #{isSettle}
        </if>
        <if test='isDepositUser != null'>
            , is_deposit_user = #{isDepositUser}
        </if>
        <if test='isSubmitted != null'>
            , is_submitted = #{isSubmitted}
        </if>
        <if test='subagencyId != null and subagencyId > 0'>
            , subagency_id = #{subagencyId}
        </if>
        <if test='isPay != null'>
            , is_pay = #{isPay}
        </if>
        <if test='receiveTypeId != null and receiveTypeId > 0'>
            , receive_type_id = #{receiveTypeId}
        </if>
        <if test='receiveDate != null'>
            , receive_date = #{receiveDate}
        </if>
        <if test='receivable != null and receivable != ""'>
            , receivable = #{receivable}
        </if>
        <if test='discount != null and discount != ""'>
            , discount = #{discount}
        </if>
        <if test='received != null and received != ""'>
            , received = #{received}
        </if>
        <if test='installment != null and installment > 0'>
            , installment = #{installment}
        </if>
        <if test='paymentVoucherImageUrl1 != null'>
            , payment_voucher_image_url_1 = #{paymentVoucherImageUrl1}
        </if>
        <if test='paymentVoucherImageUrl2 != null'>
            , payment_voucher_image_url_2 = #{paymentVoucherImageUrl2}
        </if>
        <if test='paymentVoucherImageUrl3 != null'>
            , payment_voucher_image_url_3 = #{paymentVoucherImageUrl3}
        </if>
        <if test='paymentVoucherImageUrl4 != null'>
            , payment_voucher_image_url_4 = #{paymentVoucherImageUrl4}
        </if>
        <if test='paymentVoucherImageUrl5 != null'>
            , payment_voucher_image_url_5 = #{paymentVoucherImageUrl5}
        </if>
        <if test='coePaymentVoucherImageUrl1 != null'>
            , coe_payment_voucher_image_url_1 = #{coePaymentVoucherImageUrl1}
        </if>
        <if test='coePaymentVoucherImageUrl2 != null'>
            , coe_payment_voucher_image_url_2 = #{coePaymentVoucherImageUrl2}
        </if>
        <if test='coePaymentVoucherImageUrl3 != null'>
            , coe_payment_voucher_image_url_3 = #{coePaymentVoucherImageUrl3}
        </if>
        <if test='coePaymentVoucherImageUrl4 != null'>
            , coe_payment_voucher_image_url_4 = #{coePaymentVoucherImageUrl4}
        </if>
        <if test='coePaymentVoucherImageUrl5 != null'>
            , coe_payment_voucher_image_url_5 = #{coePaymentVoucherImageUrl5}
        </if>
        <if test='visaVoucherImageUrl != null'>
            , visa_voucher_image_url = #{visaVoucherImageUrl}
        </if>
        <if test='invoiceVoucherImageUrl1 != null'>
            , invoice_voucher_image_url1 = #{invoiceVoucherImageUrl1}
        </if>
        <if test='invoiceVoucherImageUrl2 != null'>
            , invoice_voucher_image_url2 = #{invoiceVoucherImageUrl2}
        </if>
        <if test='invoiceVoucherImageUrl3 != null'>
            , invoice_voucher_image_url3 = #{invoiceVoucherImageUrl3}
        </if>
        <if test='invoiceVoucherImageUrl4 != null'>
            , invoice_voucher_image_url4 = #{invoiceVoucherImageUrl4}
        </if>
        <if test='invoiceVoucherImageUrl5 != null'>
            , invoice_voucher_image_url5 = #{invoiceVoucherImageUrl5}
        </if>
        <if test='kjPaymentImageUrl1 != null'>
            , kj_payment_image_url1 = #{kjPaymentImageUrl1}
        </if>
        <if test='kjPaymentImageUrl2 != null'>
            , kj_payment_image_url2 = #{kjPaymentImageUrl2}
        </if>
        <if test='lowPriceImageUrl != null'>
            , low_price_image_url = #{lowPriceImageUrl}
        </if>
        <if test='perAmount > 0'>
            , per_amount = #{perAmount}
        </if>
        <if test='amount > 0'>
            , amount = #{amount}
        </if>
        <if test='expectAmount > 0'>
            , expect_amount = #{expectAmount}
        </if>
        <if test='gst != null'>
            , gst = #{gst}
        </if>
        <if test='deductGst != null'>
            , deduct_gst = #{deductGst}
        </if>
        <if test='bonus != null'>
            , bonus = #{bonus}
        </if>
        <if test='userId != null and userId > 0'>
            , user_id = #{userId}
        </if>
        <if test='applicantId != null and applicantId > 0'>
            , applicant_id = #{applicantId}
        </if>
        <if test='maraId != null and maraId > 0'>
            , mara_id = #{maraId}
        </if>
        <if test='adviserId != null and adviserId > 0'>
            , adviser_id = #{adviserId}
        </if>
        <if test='adviserId2 != null and adviserId2 > 0'>
            , adviser_id_2 = #{adviserId2}
        </if>
        <if test='officialId != null'>
            , official_id = #{officialId}
        </if>
        <if test='remarks != null'>
            , remarks = #{remarks}
        </if>
        <if test='refuseReason != null'>
            , refuse_reason = #{refuseReason}
        </if>
        <if test='closedReason != null'>
            , closed_reason = #{closedReason}
        </if>
        <if test="information != null">
            , information = #{information}
        </if>
        <if test="isHistory != null">
            , is_history = #{isHistory}
        </if>
        <if test="nutCloud != null">
            , nut_cloud = #{nutCloud}
        </if>
        <if test="serviceAssessId != null">
            , service_assess_id = #{serviceAssessId}
        </if>
        <if test=" realPeopleNumber != null  and realPeopleNumber > 0 ">
            , real_People_Number = #{realPeopleNumber}
        </if>
        <if test="verifyCode != null">
            ,verify_code = #{verifyCode}
        </if>
        <if test="readcommittedDate != null">
            ,readcommitted_date = #{readcommittedDate}
        </if>
        <if test="refNo != null">
            ,ref_no = #{refNo}
        </if>
        WHERE id = #{id};
    </update>
    
    <update id="updateReviewState">
        UPDATE b_service_order 
        SET gmt_modify = now(), review_state = #{reviewState}
        WHERE id = #{id};
    </update>
    
    <select id="countServiceOrder" resultType="java.lang.Integer">
        SELECT count(*)
        FROM tb_user u, tb_adviser a, b_applicant ap, b_service_order so LEFT JOIN b_service_order_official_tag soot ON so.id=soot.service_order_id
        WHERE so.is_delete = 0 AND a.id = so.adviser_id AND u.id = so.user_id AND ap.id = so.applicant_id
        <if test='type != null and type != ""'>
            AND so.type = #{type}
        </if>
        <if test='excludeState != null and excludeState != ""'>
            AND so.state != #{excludeState}
        </if>
        <if test='stateList != null'>
            AND so.state IN
            <foreach collection="stateList" item="stateList" index="index" open="(" close=")" separator=",">
                #{stateList}
            </foreach>
        </if>
        <if test='reviewStateList != null'>
            AND so.review_state IN
            <foreach collection="reviewStateList" item="reviewStateList" index="index" open="(" close=")" separator=",">
                #{reviewStateList}
            </foreach>
        </if>
        <if test='urgentState != null and urgentState != ""'>
            AND so.urgent_state != #{urgentState}
        </if>
        <if test='startMaraApprovalDate != null and startMaraApprovalDate != "" and endMaraApprovalDate != null and endMaraApprovalDate != ""'>
            <![CDATA[ AND so.mara_approval_date > #{startMaraApprovalDate} AND so.mara_approval_date < #{endMaraApprovalDate} ]]>
        </if>
        <if test='startOfficialApprovalDate != null and startOfficialApprovalDate != "" and endOfficialApprovalDate != null and endOfficialApprovalDate != ""'>
            <![CDATA[ AND so.official_approval_date > #{startOfficialApprovalDate} AND so.official_approval_date < #{endOfficialApprovalDate} ]]>
        </if>
        <if test='startReadcommittedDate != null and startReadcommittedDate != "" and endReadcommittedDate != null and endReadcommittedDate != ""'>
            <![CDATA[ AND so.readcommitted_date > #{startReadcommittedDate} AND so.readcommitted_date < #{endReadcommittedDate} ]]>
        </if>
        <if test='regionIdList != null'>
            AND a.region_id IN
            <foreach collection="regionIdList" item="regionIdList" index="index" open="(" close=")" separator=",">
                #{regionIdList}
            </foreach>
        </if>
        <if test='userId != null and userId > 0'>
            AND so.user_id = #{userId}
        </if>
        <if test='maraId != null and maraId > 0'>
            AND so.mara_id = #{maraId}
        </if>
        <if test='adviserId != null and adviserId > 0'>
            AND (so.adviser_id = #{adviserId} OR so.adviser_id_2 = #{adviserId})
        </if>
        <if test='officialId != null and officialId > 0'>
            AND so.official_id = #{officialId}
        </if>
        <if test='officialTagId != null and officialTagId > 0'>
            AND soot.official_tag_id = #{officialTagId}
        </if>
        <if test='parentId != null and parentId > 0'>
            AND so.parent_id = #{parentId}
        </if>
        <if test='applicantParentId != null and applicantParentId > 0'>
            AND so.applicant_parent_id = #{applicantParentId}
        </if>
        <if test='serviceId != null and serviceId > 0'>
            AND so.service_id = #{serviceId}
        </if>
        <if test='schoolId != null and schoolId > 0'>
            AND so.school_id = #{schoolId}
        </if>
        <if test='isNotApproved == true'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state IS NOT NULL) <= 0 ]]>
        </if>
        <if test='auditingState == "MAWAIT"'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="WAIT" AND mara_state="WAIT") > 0 AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="REVIEW" AND mara_state="FINISH") <= 0 ]]>
        </if>
        <if test='auditingState == "MAFINISH"'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="REVIEW" AND mara_state="FINISH") > 0 ]]>
        </if>
        <if test='userName != null and userName != ""'>
            AND u.name LIKE '%${userName}%'
        </if>
        <if test='applicantName != null and applicantName != ""'>
            AND (ap.surname LIKE '%${applicantName}%' OR ap.firstname LIKE '%${applicantName}%' OR CONCAT(ap.firstname, ' ', ap.surname) = ${applicantName})
        </if>
        <if test="isPay != null">
            AND so.is_pay = #{isPay}
        </if>
        <if test="isSettle != null">
            AND so.is_settle = #{isSettle}
        </if>
        ;
    </select>
    
    <select id="listServiceOrder" resultType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        SELECT
            so.id AS id,
            so.gmt_create AS gmtCreate,
            so.gmt_modify AS gmtModify,
            so.code AS code,
            so.finish_date AS finishDate,
            so.type AS type,
            so.people_number AS peopleNumber,
            so.people_type AS peopleType,
            so.people_remarks AS peopleRemarks,
            so.service_id AS serviceId,
            so.parent_id AS parentId,
            so.applicant_parent_id AS applicantParentId,
            so.service_package_id AS servicePackageId,
            so.school_id AS schoolId,
            so.course_id AS courseId,
            so.school_institution_location_id AS schoolInstitutionLocationId,
            so.institution_trading_name AS institutionTradingName,
            so.state AS state,
            so.state_mark AS stateMark,
            so.urgent_state AS urgentState,
            so.mara_approval_date AS maraApprovalDate,
            so.submit_mara_approval_date AS submitMaraApprovalDate,
            so.official_approval_date AS officialApprovalDate,
            so.is_settle AS isSettle,
            so.is_deposit_user AS isDepositUser,
            so.is_submitted AS isSubmitted,
            so.subagency_id AS subagencyId,
            so.is_pay AS isPay,
            so.receive_type_id AS receiveTypeId,
            so.receive_date AS receiveDate,
            so.receivable AS receivable,
            so.discount AS discount,
            so.received AS received,
            so.installment AS installment,
            so.payment_voucher_image_url_1 AS paymentVoucherImageUrl1,
            so.payment_voucher_image_url_2 AS paymentVoucherImageUrl2,
            so.payment_voucher_image_url_3 AS paymentVoucherImageUrl3,
            so.payment_voucher_image_url_4 AS paymentVoucherImageUrl4,
            so.payment_voucher_image_url_5 AS paymentVoucherImageUrl5,
            so.coe_payment_voucher_image_url_1 AS coePaymentVoucherImageUrl1,
            so.coe_payment_voucher_image_url_2 AS coePaymentVoucherImageUrl2,
            so.coe_payment_voucher_image_url_3 AS coePaymentVoucherImageUrl3,
            so.coe_payment_voucher_image_url_4 AS coePaymentVoucherImageUrl4,
            so.coe_payment_voucher_image_url_5 AS coePaymentVoucherImageUrl5,
            so.visa_voucher_image_url AS visaVoucherImageUrl,
            so.invoice_voucher_image_url1 AS invoiceVoucherImageUrl1,
            so.invoice_voucher_image_url2 AS invoiceVoucherImageUrl2,
            so.invoice_voucher_image_url3 AS invoiceVoucherImageUrl3,
            so.invoice_voucher_image_url4 AS invoiceVoucherImageUrl4,
            so.invoice_voucher_image_url5 AS invoiceVoucherImageUrl5,
            so.kj_payment_image_url1 AS kjPaymentImageUrl1,
            so.kj_payment_image_url2 AS kjPaymentImageUrl2,
            so.low_price_image_url AS lowPriceImageUrl,
            so.per_amount AS perAmount,
            so.amount AS amount,
            so.expect_amount AS expectAmount,
            so.gst AS gst,
            so.deduct_gst AS deductGst,
            so.bonus AS bonus,
            so.user_id AS userId,
            so.applicant_id AS applicantId,
            so.mara_id AS maraId,
            so.adviser_id AS adviserId,
            so.adviser_id_2 AS adviserId2,
            so.official_id AS officialId,
            so.remarks AS remarks,
            so.refuse_reason AS refuseReason,
            so.closed_reason AS closedReason,
            so.information AS information ,
            so.is_history AS isHistory,
            so.nut_cloud AS nutCloud,
            so.service_assess_id AS serviceAssessId ,
            so.real_people_number AS realPeopleNumber ,
            so.verify_code AS verifyCode ,
            so.readcommitted_date AS readcommittedDate,
            so.ref_no AS refNo
        FROM tb_user u, tb_adviser a, b_applicant ap, b_service_order so LEFT JOIN b_service_order_official_tag soot ON so.id=soot.service_order_id
        WHERE so.is_delete = 0 AND a.id = so.adviser_id AND u.id = so.user_id AND ap.id = so.applicant_id
        <if test='type != null and type != ""'>
            AND so.type = #{type}
        </if>
        <if test='excludeState != null and excludeState != ""'>
            AND so.state != #{excludeState}
        </if>
        <if test='stateList != null'>
            AND so.state IN
            <foreach collection="stateList" item="stateList" index="index" open="(" close=")" separator=",">
                #{stateList}
            </foreach>
        </if>
        <if test='reviewStateList != null'>
            AND so.review_state IN
            <foreach collection="reviewStateList" item="reviewStateList" index="index" open="(" close=")" separator=",">
                #{reviewStateList}
            </foreach>
        </if>
        <if test='urgentState != null and urgentState != ""'>
            AND so.urgent_state != #{urgentState}
        </if>
        <if test='startMaraApprovalDate != null and startMaraApprovalDate != "" and endMaraApprovalDate != null and endMaraApprovalDate != ""'>
            <![CDATA[ AND so.mara_approval_date > #{startMaraApprovalDate} AND so.mara_approval_date < #{endMaraApprovalDate} ]]>
        </if>
        <if test='startOfficialApprovalDate != null and startOfficialApprovalDate != "" and endOfficialApprovalDate != null and endOfficialApprovalDate != ""'>
            <![CDATA[ AND so.official_approval_date > #{startOfficialApprovalDate} AND so.official_approval_date < #{endOfficialApprovalDate} ]]>
        </if>
        <if test='startReadcommittedDate != null and startReadcommittedDate != "" and endReadcommittedDate != null and endReadcommittedDate != ""'>
            <![CDATA[ AND so.readcommitted_date > #{startReadcommittedDate} AND so.readcommitted_date < #{endReadcommittedDate} ]]>
        </if>
        <if test='regionIdList != null'>
            AND a.region_id IN
            <foreach collection="regionIdList" item="regionIdList" index="index" open="(" close=")" separator=",">
                #{regionIdList}
            </foreach>
        </if>
        <if test='userId != null and userId > 0'>
            AND so.user_id = #{userId}
        </if>
        <if test='maraId != null and maraId > 0'>
            AND so.mara_id = #{maraId}
        </if>
        <if test='adviserId != null and adviserId > 0'>
            AND (so.adviser_id = #{adviserId} OR so.adviser_id_2 = #{adviserId})
        </if>
        <if test='officialId != null and officialId > 0'>
            AND so.official_id = #{officialId}
        </if>
        <if test='officialTagId != null and officialTagId > 0'>
            AND soot.official_tag_id = #{officialTagId}
        </if>
        <if test='parentId != null and parentId > 0'>
            AND so.parent_id = #{parentId}
        </if>
        <if test='applicantParentId != null and applicantParentId > 0'>
            AND so.applicant_parent_id = #{applicantParentId}
        </if>
        <if test='isNotApproved == true'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state IS NOT NULL) <= 0 ]]>
        </if>
        <if test='auditingState == "MAWAIT"'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="WAIT" AND mara_state="WAIT") > 0 AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="REVIEW" AND mara_state="FINISH") <= 0 ]]>
        </if>
        <if test='auditingState == "MAFINISH"'>
            <![CDATA[ AND (SELECT COUNT(id) FROM b_service_order_review WHERE service_order_id = so.id AND official_state="REVIEW" AND mara_state="FINISH") > 0 ]]>
        </if>
        <if test="schoolId != null and  schoolId > 0">
            AND so.school_id = #{schoolId}
        </if>
        <if test="serviceId != null and  serviceId > 0">
            AND so.service_id = #{serviceId}
        </if>
        <if test='userName != null and userName != ""'>
            AND u.name LIKE '%${userName}%'
        </if>
        <if test='applicantName != null and applicantName != ""'>
            AND (ap.surname LIKE '%${applicantName}%' OR ap.firstname LIKE '%${applicantName}%' OR CONCAT(ap.firstname, ' ', ap.surname) = ${applicantName})
        </if>
        <if test="isPay != null">
            AND so.is_pay = #{isPay}
        </if>
        <if test="isSettle != null">
            AND so.is_settle = #{isSettle}
        </if>
        ${orderBy}
        LIMIT #{offset}, #{rows};
    </select>
    
    <select id="listByParentId" resultType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        SELECT
            id,
            type,
            service_package_id AS servicePackageId,
            state
        FROM b_service_order
        WHERE is_delete = 0
        <if test='parentId != null and parentId > 0'>
            AND parent_id = #{parentId}
        </if>
        ORDER BY urgent_state DESC, gmt_create DESC;
    </select>
    
    <select id="getServiceOrderById" parameterType="java.lang.Integer" resultType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        SELECT
            id,
            gmt_create AS gmtCreate,
            gmt_modify AS gmtModify,
            code,
            finish_date AS finishDate,
            type,
            people_number AS peopleNumber,
            people_type AS peopleType,
            people_remarks AS peopleRemarks,
            service_id AS serviceId,
            parent_id AS parentId,
            applicant_parent_id AS applicantParentId,
            service_package_id AS servicePackageId,
            school_id AS schoolId,
            course_id AS courseId,
            school_institution_location_id AS schoolInstitutionLocationId,
            institution_trading_name AS institutionTradingName,
            state,
            state_mark AS stateMark,
            urgent_state AS urgentState,
            mara_approval_date AS maraApprovalDate,
            submit_mara_approval_date AS submitMaraApprovalDate,
            official_approval_date AS officialApprovalDate,
            is_settle AS isSettle,
            is_deposit_user AS isDepositUser,
            is_submitted AS isSubmitted,
            subagency_id AS subagencyId,
            is_pay AS isPay,
            receive_type_id AS receiveTypeId,
            receive_date AS receiveDate,
            receivable,
            discount,
            received,
            installment,
            payment_voucher_image_url_1 AS paymentVoucherImageUrl1,
            payment_voucher_image_url_2 AS paymentVoucherImageUrl2,
            payment_voucher_image_url_3 AS paymentVoucherImageUrl3,
            payment_voucher_image_url_4 AS paymentVoucherImageUrl4,
            payment_voucher_image_url_5 AS paymentVoucherImageUrl5,
            coe_payment_voucher_image_url_1 AS coePaymentVoucherImageUrl1,
            coe_payment_voucher_image_url_2 AS coePaymentVoucherImageUrl2,
            coe_payment_voucher_image_url_3 AS coePaymentVoucherImageUrl3,
            coe_payment_voucher_image_url_4 AS coePaymentVoucherImageUrl4,
            coe_payment_voucher_image_url_5 AS coePaymentVoucherImageUrl5,
            invoice_voucher_image_url1 AS invoiceVoucherImageUrl1,
            invoice_voucher_image_url2 AS invoiceVoucherImageUrl2,
            invoice_voucher_image_url3 AS invoiceVoucherImageUrl3,
            invoice_voucher_image_url4 AS invoiceVoucherImageUrl4,
            invoice_voucher_image_url5 AS invoiceVoucherImageUrl5,
            visa_voucher_image_url AS visaVoucherImageUrl,
            kj_payment_image_url1 AS kjPaymentImageUrl1,
            kj_payment_image_url2 AS kjPaymentImageUrl2,
            low_price_image_url AS lowPriceImageUrl,
            per_amount AS perAmount,
            amount,
            expect_amount AS expectAmount,
            gst,
            deduct_gst AS deductGst,
            bonus,
            user_id AS userId,
            applicant_id AS applicantId,
            mara_id AS maraId,
            adviser_id AS adviserId,
            adviser_id_2 AS adviserId2,
            official_id AS officialId,
            remarks,
            refuse_reason AS refuseReason,
            closed_reason AS closedReason,
            information  ,
            is_history AS isHistory,
            nut_cloud AS nutCloud,
            service_assess_id AS serviceAssessId ,
            real_people_number AS realPeopleNumber ,
            verify_code AS verifyCode ,
            readcommitted_date AS readcommittedDate,
            ref_no AS refNo
        FROM b_service_order WHERE id = #{id, jdbcType=INTEGER};
    </select>
    
    <delete id="deleteServiceOrderById" parameterType="java.lang.Integer">
        DELETE b_service_order,b_service_order_comment,b_service_order_review,b_visa,b_visa_comment,b_commission_order,b_commission_order_comment
        FROM b_service_order
        LEFT JOIN b_service_order_comment ON b_service_order.id = b_service_order_comment.service_order_id
        LEFT JOIN b_service_order_review ON b_service_order.id = b_service_order_review.service_order_id
        LEFT join b_visa on b_service_order.id = b_visa.service_order_id
        left join b_visa_comment on b_visa.id = b_visa_comment.visa_id
        left join b_commission_order on b_service_order.id = b_commission_order.service_order_id
        left join b_commission_order_comment on b_commission_order.id = b_commission_order_comment.commission_order_id
        WHERE b_service_order.id = #{id, jdbcType=INTEGER};
    </delete>
    
    <update id="finishServiceOrder" parameterType="java.lang.Integer">
        UPDATE b_service_order
        SET gmt_modify = now(), finish_date = now()
        WHERE id = #{id, jdbcType=INTEGER};
    </update>

    <update id="ReadcommittedServiceOrder" parameterType="java.lang.Integer">
        UPDATE b_service_order
        SET gmt_modify = now(), readcommitted_date = now()
        WHERE id = #{id, jdbcType=INTEGER};
    </update>


    <select id="listServiceOrderGroupByForRegion" resultType="org.zhinanzhen.b.dao.pojo.EachRegionNumberDO">
        SELECT
        count( so.id ) AS count,
        tr.`name` AS name,
        <choose>
            <when test=" type!=null and type!='' and type == 'OVST' ">
                bsc.`name` AS code,
                school_id AS serviceId
                FROM
                tb_adviser a,
                b_service_order so,
                tb_region tr,
                b_school bsc
            </when>
            <when test=" type!=null and type!='' and type == 'VISA' ">
                bs.`code` AS code,
                service_id AS serviceId
                FROM
                tb_adviser a,
                b_service_order so,
                tb_region tr,
                b_service bs
            </when>
        </choose>
        WHERE
        so.is_delete = 0
        AND a.id = so.adviser_id
        <if test=" type != null and type != ''">
            AND type = #{type}
        </if>
        AND so.parent_id = 0
        AND so.state != 'PENDING'
        AND tr.id = a.region_id
        <choose>
            <when test=" type!=null and type!='' and type == 'OVST' ">
                AND school_id = bsc.id
            </when>
            <when test=" type!=null and type!='' and type == 'VISA' ">
                AND service_id = bs.id
            </when>
        </choose>
        <if test='startOfficialApprovalDate != null and startOfficialApprovalDate != "" and endOfficialApprovalDate != null and endOfficialApprovalDate != ""'>
            <![CDATA[ AND so.official_approval_date > #{startOfficialApprovalDate} AND so.official_approval_date < #{endOfficialApprovalDate} ]]>
        </if>
        <choose>
            <when test=" type!=null and type!='' and type == 'OVST' ">
                GROUP BY
                bsc.name,
                tr.`name`
            </when>
            <when test=" type!=null and type!='' and type == 'VISA' ">
                GROUP BY
                service_id,
                tr.`name`
            </when>
        </choose>
    </select>

    <select id="listByVerifyCode" resultType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        SELECT
            id,
            gmt_create AS gmtCreate,
            gmt_modify AS gmtModify,
            code,
            finish_date AS finishDate,
            type,
            people_number AS peopleNumber,
            people_type AS peopleType,
            people_remarks AS peopleRemarks,
            service_id AS serviceId,
            parent_id AS parentId,
            applicant_parent_id AS applicantParentId,
            service_package_id AS servicePackageId,
            school_id AS schoolId,
            course_id AS courseId,
            school_institution_location_id AS schoolInstitutionLocationId,
            institution_trading_name AS institutionTradingName,
            state,
            urgent_state AS urgentState,
            mara_approval_date AS maraApprovalDate,
            submit_mara_approval_date AS submitMaraApprovalDate,
            official_approval_date AS officialApprovalDate,
            is_settle AS isSettle,
            is_deposit_user AS isDepositUser,
            is_submitted AS isSubmitted,
            subagency_id AS subagencyId,
            is_pay AS isPay,
            receive_type_id AS receiveTypeId,
            receive_date AS receiveDate,
            receivable,
            discount,
            received,
            installment,
            payment_voucher_image_url_1 AS paymentVoucherImageUrl1,
            payment_voucher_image_url_2 AS paymentVoucherImageUrl2,
            payment_voucher_image_url_3 AS paymentVoucherImageUrl3,
            payment_voucher_image_url_4 AS paymentVoucherImageUrl4,
            payment_voucher_image_url_5 AS paymentVoucherImageUrl5,
            coe_payment_voucher_image_url_1 AS coePaymentVoucherImageUrl1,
            coe_payment_voucher_image_url_2 AS coePaymentVoucherImageUrl2,
            coe_payment_voucher_image_url_3 AS coePaymentVoucherImageUrl3,
            coe_payment_voucher_image_url_4 AS coePaymentVoucherImageUrl4,
            coe_payment_voucher_image_url_5 AS coePaymentVoucherImageUrl5,
            visa_voucher_image_url AS visaVoucherImageUrl,
            invoice_voucher_image_url1 AS invoiceVoucherImageUrl1,
            invoice_voucher_image_url2 AS invoiceVoucherImageUrl2,
            invoice_voucher_image_url3 AS invoiceVoucherImageUrl3,
            invoice_voucher_image_url4 AS invoiceVoucherImageUrl4,
            invoice_voucher_image_url5 AS invoiceVoucherImageUrl5,
            kj_payment_image_url1 AS kjPaymentImageUrl1,
            kj_payment_image_url2 AS kjPaymentImageUrl2,
            low_price_image_url AS lowPriceImageUrl,
            per_amount AS perAmount,
            amount,
            expect_amount AS expectAmount,
            gst,
            deduct_gst AS deductGst,
            bonus,
            user_id AS userId,
            applicant_id AS applicantId,
            mara_id AS maraId,
            adviser_id AS adviserId,
            adviser_id_2 AS adviserId2,
            official_id AS officialId,
            remarks,
            refuse_reason AS refuseReason,
            closed_reason AS closedReason,
            information  ,
            is_history AS isHistory,
            nut_cloud AS nutCloud,
            service_assess_id AS serviceAssessId ,
            real_people_number AS realPeopleNumber ,
            verify_code AS verifyCode ,
            readcommitted_date AS readcommittedDate,
            ref_no AS refNo
        FROM b_service_order WHERE verify_code = #{verifyCode};
    </select>

    <select id="eachSubjectCount" resultType="org.zhinanzhen.b.dao.pojo.EachSubjectCountDO">
        SELECT
        bs.`name`,
        bs.`subject`,
        COUNT( bso.id ) AS number
        FROM
        `b_service_order` bso,
        b_school bs
        WHERE
        bso.school_id = bs.id
        AND bso.type = 'OVST'
        <if test='startOfficialApprovalDate != null and startOfficialApprovalDate != "" and endOfficialApprovalDate != null and endOfficialApprovalDate != ""'>
            <![CDATA[ AND bso.official_approval_date > #{startOfficialApprovalDate} AND bso.official_approval_date < #{endOfficialApprovalDate} ]]>
        </if>
        GROUP BY
        bs.id;
    </select>

    <select id="NotReviewedServiceOrder" resultType="org.zhinanzhen.b.dao.pojo.ServiceOrderDO">
        SELECT
        so.id AS id,
        so.gmt_create AS gmtCreate,
        so.gmt_modify AS gmtModify,
        so.code AS code,
        so.finish_date AS finishDate,
        so.type AS type,
        so.people_number AS peopleNumber,
        so.people_type AS peopleType,
        so.people_remarks AS peopleRemarks,
        so.service_id AS serviceId,
        so.parent_id AS parentId,
        so.applicant_parent_id AS applicantParentId,
        so.service_package_id AS servicePackageId,
        so.school_id AS schoolId,
        so.course_id AS courseId,
        so.school_institution_location_id AS schoolInstitutionLocationId,
        so.institution_trading_name AS institutionTradingName,
        so.state AS state,
        so.state_mark AS stateMark,
        so.urgent_state AS urgentState,
        so.mara_approval_date AS maraApprovalDate,
        so.submit_mara_approval_date AS submitMaraApprovalDate,
        so.official_approval_date AS officialApprovalDate,
        so.is_settle AS isSettle,
        so.is_deposit_user AS isDepositUser,
        so.is_submitted AS isSubmitted,
        so.subagency_id AS subagencyId,
        so.is_pay AS isPay,
        so.receive_type_id AS receiveTypeId,
        so.receive_date AS receiveDate,
        so.receivable AS receivable,
        so.discount AS discount,
        so.received AS received,
        so.installment AS installment,
        so.payment_voucher_image_url_1 AS paymentVoucherImageUrl1,
        so.payment_voucher_image_url_2 AS paymentVoucherImageUrl2,
        so.payment_voucher_image_url_3 AS paymentVoucherImageUrl3,
        so.payment_voucher_image_url_4 AS paymentVoucherImageUrl4,
        so.payment_voucher_image_url_5 AS paymentVoucherImageUrl5,
        so.coe_payment_voucher_image_url_1 AS coePaymentVoucherImageUrl1,
        so.coe_payment_voucher_image_url_2 AS coePaymentVoucherImageUrl2,
        so.coe_payment_voucher_image_url_3 AS coePaymentVoucherImageUrl3,
        so.coe_payment_voucher_image_url_4 AS coePaymentVoucherImageUrl4,
        so.coe_payment_voucher_image_url_5 AS coePaymentVoucherImageUrl5,
        so.visa_voucher_image_url AS visaVoucherImageUrl,
        so.invoice_voucher_image_url1 AS invoiceVoucherImageUrl1,
        so.invoice_voucher_image_url2 AS invoiceVoucherImageUrl2,
        so.invoice_voucher_image_url3 AS invoiceVoucherImageUrl3,
        so.invoice_voucher_image_url4 AS invoiceVoucherImageUrl4,
        so.invoice_voucher_image_url5 AS invoiceVoucherImageUrl5,
        so.kj_payment_image_url1 AS kjPaymentImageUrl1,
        so.kj_payment_image_url2 AS kjPaymentImageUrl2,
        so.low_price_image_url AS lowPriceImageUrl,
        so.per_amount AS perAmount,
        so.amount AS amount,
        so.expect_amount AS expectAmount,
        so.gst AS gst,
        so.deduct_gst AS deductGst,
        so.bonus AS bonus,
        so.user_id AS userId,
        so.applicant_id AS applicantId,
        so.mara_id AS maraId,
        so.adviser_id AS adviserId,
        so.adviser_id_2 AS adviserId2,
        so.official_id AS officialId,
        so.remarks AS remarks,
        so.refuse_reason AS refuseReason,
        so.closed_reason AS closedReason,
        so.information AS information ,
        so.is_history AS isHistory,
        so.nut_cloud AS nutCloud,
        so.service_assess_id AS serviceAssessId ,
        so.real_people_number AS realPeopleNumber ,
        so.verify_code AS verifyCode ,
        so.readcommitted_date AS readcommittedDate,
        so.ref_no AS refNo
        FROM tb_user u, tb_adviser a, b_service_order so LEFT JOIN b_service_order_official_tag soot ON so.id=soot.service_order_id
        WHERE so.is_delete = 0 AND a.id = so.adviser_id AND u.id = so.user_id AND so.type != 'SIV' AND so.type != 'NSV'
        AND so.state = 'REVIEW'
        <![CDATA[ AND DATE_SUB(NOW(),INTERVAL 1 day)  >  official_approval_date ]]>
        <if test="officialId != null and officialId > 0">
            AND so.official_id = #{officialId}
        </if>
        <if test="thisMonth != null and thisMonth == true">
            AND DATE_FORMAT(official_approval_date, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
        </if>
        <if test="thisMonth != null and thisMonth == false">
            LIMIT 20
        </if>
        ;
    </select>

    <select id="caseCount" resultType="java.lang.Integer">
        SELECT
        count(so.id)
        FROM tb_user u, tb_adviser a, b_service_order so LEFT JOIN b_service_order_official_tag soot ON so.id=soot.service_order_id
        WHERE so.is_delete = 0 AND a.id = so.adviser_id AND u.id = so.user_id
        <if test="officialId != null and officialId > 0">
            AND so.official_id = #{officialId}
        </if>
        <choose>
            <when test='days != null and days == "M"'>
                AND DATE_FORMAT(official_approval_date, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
            </when>
            <when test='days != null and days == "W"'>
                AND YEARWEEK(official_approval_date,1) = YEARWEEK(NOW(),1)
            </when>
        </choose>
        <if test='state != null and state == "OREVIEW"'>
            AND so.state != 'PENDING'
        </if>
        <if test='state != null and state == "COMPLETE"'>
            AND so.state = 'COMPLETE'
        </if>
        ;
    </select>

    <select id="listServiceOrderToAnalysis" resultType="org.zhinanzhen.b.dao.pojo.AdviserServiceCountDO">
        SELECT
            count( so.id ) AS count,
            type,
            service_id AS serviceId,
            school_id  AS schoolId,
            service_package_id AS servicePackageId ,
            so.adviser_id AS adviserId ,
            r.name AS regionName
        FROM
            b_service_order so,tb_adviser a,tb_region r
        WHERE
            so.is_delete = 0 AND a.id = so.adviser_id AND a.state = 'ENABLED' AND a.region_id = r.id
        <if test="typeList != null">
            AND so.type IN
            <foreach collection="typeList" index="index" open="(" close=")" separator="," item="type">
                #{type}
            </foreach>
        </if>
        <if test="month != null">
            AND DATE_FORMAT(so.official_approval_date,'%Y%c') = CONCAT(DATE_FORMAT(NOW(),'%Y'),#{month})
        </if>
        <if test="regionIdList != null">
            AND r.id IN
            <foreach collection="regionIdList" item="regionId" separator="," close=")" open="(" index="index">
                #{regionId}
            </foreach>
        </if>
        GROUP BY
        so.adviser_id,
        service_id,
        school_id,
        service_package_id
        ;
    </select>

    <select id="listOvstServiceOrderGroupByForRegion" resultType="org.zhinanzhen.b.dao.pojo.EachRegionNumberDO">
        SELECT
        count( so.id ) AS count,
        tr.`name` AS name,
        bsi.name AS instiName,
        bsi.institution_trading_name AS institutionTradingName,
        bsi.institution_name AS institutionName,
        course_id AS serviceId
        FROM tb_adviser a,b_service_order so,tb_region tr,b_school_course bsc,b_school_institution bsi
        WHERE so.is_delete = 0
        AND a.id = so.adviser_id  AND type = 'OVST' AND so.parent_id = 0
        AND so.state != 'PENDING' AND tr.id = a.region_id   AND course_id = bsc.id AND bsi.id = bsc.provider_id
        <if test='startOfficialApprovalDate != null and startOfficialApprovalDate != "" and endOfficialApprovalDate != null and endOfficialApprovalDate != ""'>
            <![CDATA[ AND so.official_approval_date > #{startOfficialApprovalDate} AND so.official_approval_date < #{endOfficialApprovalDate} ]]>
        </if>
        GROUP BY bsi.id , tr.`name`;
    </select>

</mapper>